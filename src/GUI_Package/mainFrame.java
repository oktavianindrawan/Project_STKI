/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Package;

import analysisPackage.resFrame;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import analysisPackage.searchWords;
import analysisPackage.wordsData;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conPanel = new javax.swing.JPanel();
        conDecoPanel = new javax.swing.JPanel();
        titleConvertLabel = new javax.swing.JLabel();
        openButton = new javax.swing.JButton();
        sourceField = new javax.swing.JTextField();
        newButton = new javax.swing.JButton();
        outputField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        analysisPanel = new javax.swing.JPanel();
        aDecoPanel = new javax.swing.JPanel();
        analysisPrepLabel = new javax.swing.JLabel();
        aOpenButton = new javax.swing.JButton();
        aSourceField = new javax.swing.JTextField();
        analyzeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        enableOption = new javax.swing.JCheckBox();
        filesScroller = new javax.swing.JScrollPane();
        fileListTable = new javax.swing.JTable();
        resultPanel = new javax.swing.JPanel();
        resultDecoPanel = new javax.swing.JPanel();
        analysisLabel = new javax.swing.JLabel();
        resultScroller = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        statusPanel = new javax.swing.JPanel();
        docLabel = new javax.swing.JLabel();
        tokenLabel = new javax.swing.JLabel();
        stopLabel = new javax.swing.JLabel();
        stemLabel = new javax.swing.JLabel();
        docField = new javax.swing.JTextField();
        tokenField = new javax.swing.JTextField();
        stopField = new javax.swing.JTextField();
        stemField = new javax.swing.JTextField();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        andCheck = new javax.swing.JCheckBox();
        orCheck = new javax.swing.JCheckBox();

        setTitle("Apache Tika Word Processing");
        setName("mainFrame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        conPanel.setBackground(new java.awt.Color(236, 236, 236));
        conPanel.setPreferredSize(new java.awt.Dimension(280, 200));
        conPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        conDecoPanel.setBackground(new java.awt.Color(65, 131, 215));

        titleConvertLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleConvertLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleConvertLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleConvertLabel.setText("DOCS TO TXT CONVERSION");

        javax.swing.GroupLayout conDecoPanelLayout = new javax.swing.GroupLayout(conDecoPanel);
        conDecoPanel.setLayout(conDecoPanelLayout);
        conDecoPanelLayout.setHorizontalGroup(
            conDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleConvertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        conDecoPanelLayout.setVerticalGroup(
            conDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleConvertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        conPanel.add(conDecoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 50));

        openButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        openButton.setText("Open");
        openButton.setBorder(null);
        openButton.setBorderPainted(false);
        openButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        conPanel.add(openButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 60, 30));

        sourceField.setEditable(false);
        sourceField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sourceField.setForeground(new java.awt.Color(80, 80, 80));
        sourceField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        sourceField.setText(" -- add document file");
        conPanel.add(sourceField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 260, 30));

        newButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        newButton.setText("New");
        newButton.setBorder(null);
        newButton.setBorderPainted(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        conPanel.add(newButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 60, 30));

        outputField.setEditable(false);
        outputField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        outputField.setForeground(new java.awt.Color(80, 80, 80));
        outputField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        outputField.setText(" -- set output file");
        conPanel.add(outputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 260, 30));

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        saveButton.setText("Save");
        saveButton.setBorder(null);
        saveButton.setBorderPainted(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        conPanel.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 120, 30));

        analysisPanel.setBackground(new java.awt.Color(236, 236, 236));
        analysisPanel.setPreferredSize(new java.awt.Dimension(280, 200));
        analysisPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aDecoPanel.setBackground(new java.awt.Color(65, 131, 215));

        analysisPrepLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        analysisPrepLabel.setForeground(new java.awt.Color(255, 255, 255));
        analysisPrepLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        analysisPrepLabel.setText("ANALYSIS");

        javax.swing.GroupLayout aDecoPanelLayout = new javax.swing.GroupLayout(aDecoPanel);
        aDecoPanel.setLayout(aDecoPanelLayout);
        aDecoPanelLayout.setHorizontalGroup(
            aDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analysisPrepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        aDecoPanelLayout.setVerticalGroup(
            aDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analysisPrepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        analysisPanel.add(aDecoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 50));

        aOpenButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        aOpenButton.setText("Open");
        aOpenButton.setBorder(null);
        aOpenButton.setBorderPainted(false);
        aOpenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aOpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aOpenButtonActionPerformed(evt);
            }
        });
        analysisPanel.add(aOpenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 60, 30));

        aSourceField.setEditable(false);
        aSourceField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aSourceField.setForeground(new java.awt.Color(80, 80, 80));
        aSourceField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        aSourceField.setText(" -- no files loaded");
        analysisPanel.add(aSourceField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 260, 30));

        analyzeButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        analyzeButton.setText("Analyze");
        analyzeButton.setBorder(null);
        analyzeButton.setBorderPainted(false);
        analyzeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        analyzeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzeButtonActionPerformed(evt);
            }
        });
        analysisPanel.add(analyzeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 120, 30));

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        resetButton.setText("Reset");
        resetButton.setBorder(null);
        resetButton.setBorderPainted(false);
        resetButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        analysisPanel.add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 120, 30));

        enableOption.setBackground(new java.awt.Color(236, 236, 236));
        enableOption.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        enableOption.setText("Enable multi selection");
        analysisPanel.add(enableOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 150, 30));

        filesScroller.setBackground(new java.awt.Color(236, 236, 236));
        filesScroller.setBorder(null);
        filesScroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        filesScroller.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        filesScroller.setPreferredSize(new java.awt.Dimension(260, 230));

        fileListTable.setBackground(new java.awt.Color(236, 236, 236));
        fileListTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fileListTable.setRowSelectionAllowed(false);
        filesScroller.setViewportView(fileListTable);

        analysisPanel.add(filesScroller, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 260, 230));

        resultPanel.setBackground(new java.awt.Color(236, 236, 236));
        resultPanel.setPreferredSize(new java.awt.Dimension(280, 200));
        resultPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        resultDecoPanel.setBackground(new java.awt.Color(65, 131, 215));

        analysisLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        analysisLabel.setForeground(new java.awt.Color(255, 255, 255));
        analysisLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        analysisLabel.setText("ANALYSIS RESULT");

        javax.swing.GroupLayout resultDecoPanelLayout = new javax.swing.GroupLayout(resultDecoPanel);
        resultDecoPanel.setLayout(resultDecoPanelLayout);
        resultDecoPanelLayout.setHorizontalGroup(
            resultDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analysisLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addContainerGap())
        );
        resultDecoPanelLayout.setVerticalGroup(
            resultDecoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultDecoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analysisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        resultPanel.add(resultDecoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 50));

        resultScroller.setBackground(new java.awt.Color(236, 236, 236));
        resultScroller.setBorder(null);
        resultScroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        resultScroller.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        resultScroller.setPreferredSize(new java.awt.Dimension(260, 230));

        resultTable.setBackground(new java.awt.Color(236, 236, 236));
        resultTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Stopwords", "Case Fold", "Stem"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setRowSelectionAllowed(false);
        resultTable.getTableHeader().setResizingAllowed(false);
        resultTable.getTableHeader().setReorderingAllowed(false);
        resultScroller.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setResizable(false);
            resultTable.getColumnModel().getColumn(2).setResizable(false);
            resultTable.getColumnModel().getColumn(3).setResizable(false);
        }

        resultPanel.add(resultScroller, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 450, 430));

        statusPanel.setBackground(new java.awt.Color(236, 236, 236));
        statusPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        docLabel.setBackground(new java.awt.Color(236, 236, 236));
        docLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        docLabel.setText("Documents");
        statusPanel.add(docLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 20));

        tokenLabel.setBackground(new java.awt.Color(236, 236, 236));
        tokenLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tokenLabel.setText("Token");
        statusPanel.add(tokenLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, 20));

        stopLabel.setBackground(new java.awt.Color(236, 236, 236));
        stopLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stopLabel.setText("Stop Words");
        statusPanel.add(stopLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 100, 20));

        stemLabel.setBackground(new java.awt.Color(236, 236, 236));
        stemLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stemLabel.setText("Stem");
        statusPanel.add(stemLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 100, 20));

        docField.setEditable(false);
        docField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusPanel.add(docField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 50, 20));

        tokenField.setEditable(false);
        tokenField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusPanel.add(tokenField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 50, 20));

        stopField.setEditable(false);
        stopField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusPanel.add(stopField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 50, 20));

        stemField.setEditable(false);
        stemField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusPanel.add(stemField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 50, 20));

        resultPanel.add(statusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 450, 70));

        searchField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchField.setEnabled(false);
        resultPanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 380, 30));

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        searchButton.setText("Search");
        searchButton.setBorder(null);
        searchButton.setBorderPainted(false);
        searchButton.setEnabled(false);
        searchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        resultPanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 60, 30));

        andCheck.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        andCheck.setForeground(new java.awt.Color(20, 20, 20));
        andCheck.setSelected(true);
        andCheck.setText("And Clause");
        andCheck.setEnabled(false);
        andCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andCheckActionPerformed(evt);
            }
        });
        resultPanel.add(andCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        orCheck.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        orCheck.setForeground(new java.awt.Color(20, 20, 20));
        orCheck.setText("Or Clause");
        orCheck.setEnabled(false);
        orCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orCheckActionPerformed(evt);
            }
        });
        resultPanel.add(orCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(conPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(separator))
                    .addComponent(analysisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(conPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(analysisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aOpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aOpenButtonActionPerformed
        // TODO add your handling code here:
        getFileSource();


    }//GEN-LAST:event_aOpenButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        // TODO add your handling code here:
        conversionPackage.getSource getSource = new conversionPackage.getSource();
        sourcePath = getSource.getSourcePath();

        sourceField.setText(sourcePath);
    }//GEN-LAST:event_openButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:

        conversionPackage.getOutput getOutput = new conversionPackage.getOutput();
        outputPath = getOutput.getOutputLocation();

        if (sourcePath != null) {
            outputField.setText(outputPath);
        }
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:

        if (sourcePath == null) {
            javax.swing.JOptionPane.showMessageDialog(null, "Please select source file");
        }
        if (outputPath == null) {
            javax.swing.JOptionPane.showMessageDialog(null, "Plese select output file");
        }
        if (outputPath != null && sourcePath != null) {
            conversionPackage.conOperation operate = new conversionPackage.conOperation(sourcePath, outputPath);
            javax.swing.JOptionPane.showMessageDialog(null, "Conversion Success");
            sourcePath = null;
            outputPath = null;
            sourceField.setText(" -- add document file");
            outputField.setText(" -- set output file");
        }


    }//GEN-LAST:event_saveButtonActionPerformed

    private void analyzeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzeButtonActionPerformed
        // TODO add your handling code here:

        if (status != false) {
            enableSearch();
            analyzeDocument();
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Nothing to do");
        }


    }//GEN-LAST:event_analyzeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        disableSearch();
        clear();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        if (!searchField.getText().equals("")) {
            searchFunction();
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Nothing to search, insert at least 1 keyword");
        }

        searchField.setText("");

    }//GEN-LAST:event_searchButtonActionPerformed

    private void andCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andCheckActionPerformed
        // TODO add your handling code here:
        andCheck.setSelected(true);
        orCheck.setSelected(false);
    }//GEN-LAST:event_andCheckActionPerformed

    private void orCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orCheckActionPerformed
        // TODO add your handling code here:
        andCheck.setSelected(false);
        orCheck.setSelected(true);
    }//GEN-LAST:event_orCheckActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:

        clear();
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void analyzeDocument() {

        analysisPackage.aGetResult result = new analysisPackage.aGetResult();

        if (!enableOption.isSelected()) {

            result.singleGetResult(path);
            resultToken = result.getResult();
            resultStop = result.getStop();
            resultSuffix = result.getSuffix();
            stopTotal = result.getRemovedWords();
            stemTotal = result.getRemovedStem();
            resultCase = result.getCaseFold();
            docField.setText("1");

        }

        if (enableOption.isSelected()) {
            result.multiGetResult(pathList);
            resultToken = result.getResult();
            resultStop = result.getStop();
            resultSuffix = result.getSuffix();
            stopTotal = result.getRemovedWords();
            stemTotal = result.getRemovedStem();
            resultCase = result.getCaseFold();
            docField.setText(String.valueOf(nameList.size()));
        }

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) resultTable.getModel();

        for (int loop = 0; loop < resultToken.size(); loop++) {
            model.addRow(new Object[]{resultToken.get(loop), resultStop.get(loop), resultCase.get(loop), resultSuffix.get(loop)});
        }

        tokenField.setText(String.valueOf(resultToken.size()));
        stopField.setText(String.valueOf(stopTotal));
        stemField.setText(String.valueOf(stemTotal));
    }

    private void enableSearch() {

        searchField.setEnabled(true);
        searchButton.setEnabled(true);
        andCheck.setEnabled(true);
        orCheck.setEnabled(true);

    }

    private void disableSearch() {

        searchField.setEnabled(false);
        searchButton.setEnabled(false);
        andCheck.setEnabled(false);
        orCheck.setEnabled(false);

    }

    private void searchFunction() {

        ArrayList<wordsData> searchResult = new ArrayList<>();
        // generate token and save to temporary token array string
        String[] token = searchField.getText().split("\\W+");

        ArrayList<String> sendKeyword = new ArrayList<String>(Arrays.asList(token));

        searchWords word = new searchWords(sendKeyword);

        try {

            searchResult = word.getDB();

            if (andCheck.isSelected() == true) {

                int found = 0;

                for (int loop = 0; loop < searchResult.size(); loop++) {

                    if (searchResult.get(loop).getStatus().contains("not found")) {

                        checkNotFound = true;
                        break;

                    } else {

                        checkNotFound = false;
                        found = found + 1;
                    }

                }

                if (checkNotFound) {

                    javax.swing.JOptionPane.showMessageDialog(null, "word not found");

                } else {

                    resFrame resFrame = new resFrame();
                    resFrame.setTable(searchResult, token.length, "AND", found, 0);
                    resFrame.setVisible(true);
                }

            }

            if (orCheck.isSelected() == true) {
                int missing = 0;
                int found = 0;

                for (int loop = 0; loop < searchResult.size(); loop++) {

                    if (searchResult.get(loop).getStatus().contains("not found")) {

                        missing = missing + 1;

                    } else {
                        found = found + 1;
                    }

                }

                resFrame resFrame = new resFrame();
                resFrame.setTable(searchResult, token.length, "OR", found, missing);
                resFrame.setVisible(true);
            }

        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getFileSource() {

        analysisPackage.aGetResource source = new analysisPackage.aGetResource();

        boolean check = enableOption.isSelected();

        clear();

        fileListTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{"Files"}
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        fileListTable.setRowSelectionAllowed(false);
        fileListTable.getTableHeader().setResizingAllowed(false);
        fileListTable.getTableHeader().setReorderingAllowed(false);

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) fileListTable.getModel();

        if (check) {

            source.getMultiFile();
            pathList = source.getMultiFilePath();
            nameList = source.getMultiFileName();

            if (pathList != null) {

                if (nameList != null) {

                    for (int loop = 0; loop < nameList.size(); loop++) {

                        model.addRow(new Object[]{nameList.get(loop)});
                    }

                    aSourceField.setText(" -- multiple files are loaded");
                }

                status = true;

            } else {
                status = false;
            }

        } else {
            source.getSingleFile();
            name = source.getSingleFileName();
            path = source.getSingleFilePath();

            if (name != null) {

                if (name != null) {
                    model.addRow(new Object[]{name});
                    aSourceField.setText(" -- one file loaded");
                }

                status = true;
            } else {

                status = false;
            }

        }
    }

    private void clear() {

        java.io.File file = new java.io.File("./db/index.db");
        file.delete();

        status = false;
        resultStop = null;
        resultToken = null;
        resultSuffix = null;
        pathList = null;
        nameList = null;
        resultCase = null;
        sourcePath = null;
        outputPath = null;
        path = null;
        name = null;
        stopTotal = 0;
        stemTotal = 0;
        stopTotal = 0;

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) resultTable.getModel();
        model.setRowCount(0);

        javax.swing.table.DefaultTableModel model_2 = (javax.swing.table.DefaultTableModel) fileListTable.getModel();
        model_2.setRowCount(0);

        searchField.setText("");
        stemField.setText("");
        tokenField.setText("");
        stopField.setText("");
        docField.setText("");

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        String OS = System.getProperty("os.name");
        String theme = null;

        if (OS.contains("Windows")) {
            theme = "Windows";
        }

        if (OS.indexOf("nix") >= 0 || OS.indexOf("nux") >= 0 || OS.indexOf("aix") > 0) {
            theme = "GTK+";
        }

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (theme.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    private boolean checkNotFound = false;
    private boolean status = false;
    private ArrayList<String> resultStop;
    private ArrayList<String> resultToken;
    private ArrayList<String> resultSuffix;
    private ArrayList<String> pathList;
    private ArrayList<String> nameList;
    private ArrayList<String> resultCase;
    private String sourcePath = null;
    private String outputPath = null;
    private String path = null;
    private String name = null;
    private int stopTotal;
    private int stemTotal;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aDecoPanel;
    private javax.swing.JButton aOpenButton;
    private javax.swing.JTextField aSourceField;
    private javax.swing.JLabel analysisLabel;
    private javax.swing.JPanel analysisPanel;
    private javax.swing.JLabel analysisPrepLabel;
    private javax.swing.JButton analyzeButton;
    private javax.swing.JCheckBox andCheck;
    private javax.swing.JPanel conDecoPanel;
    private javax.swing.JPanel conPanel;
    private javax.swing.JTextField docField;
    private javax.swing.JLabel docLabel;
    private javax.swing.JCheckBox enableOption;
    private javax.swing.JTable fileListTable;
    private javax.swing.JScrollPane filesScroller;
    private javax.swing.JButton newButton;
    private javax.swing.JButton openButton;
    private javax.swing.JCheckBox orCheck;
    private javax.swing.JTextField outputField;
    private javax.swing.JButton resetButton;
    private javax.swing.JPanel resultDecoPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JScrollPane resultScroller;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JSeparator separator;
    private javax.swing.JTextField sourceField;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField stemField;
    private javax.swing.JLabel stemLabel;
    private javax.swing.JTextField stopField;
    private javax.swing.JLabel stopLabel;
    private javax.swing.JLabel titleConvertLabel;
    private javax.swing.JTextField tokenField;
    private javax.swing.JLabel tokenLabel;
    // End of variables declaration//GEN-END:variables

}
